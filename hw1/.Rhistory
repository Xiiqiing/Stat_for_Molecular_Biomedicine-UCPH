SEM <- SD/sqrt(n)
CI1 <- xbar - Z * SEM
CI2 <- xbar + Z * SEM
return(c(mean = xbar, SEM = SEM, CI1 = CI1, CI2 = CI2))
}
result <- as.matrix(cbind(
calc_CI(type0$glucose, 0.01),
calc_CI(type1$glucose, 0.01),
calc_CI(type2$glucose, 0.01)))
colnames(result) <- c('non-homo, 0','non-homo, 1','homozygous')
writeLines('1H')
(colnames(result) <- c('non-homo, 0','non-homo, 1','homozygous'))
result <- as.matrix(cbind(
calc_CI(type0$glucose, 0.01),
calc_CI(type1$glucose, 0.01),
calc_CI(type2$glucose, 0.01)))
colnames(result) <- c('non-homo, 0','non-homo, 1','homozygous')
writeLines('1H')
(result)
#1I
library(gplots)
ci.l <- result['CI1',]
ci.u <- result['CI2',]
col = c("lightblue", "mistyrose",
"lightcyan")
barplot2(result['mean',], xlab = "Type", ylab = "Mean of glucose levels",
beside = TRUE, col = col,
main = "Mean of glucose levels with 99% confidence", font.main = 4,
plot.ci = TRUE, ci.l = ci.l, ci.u = ci.u,
plot.grid = TRUE)
legend("topleft", legend = colnames(result), fill = col)
#1J
homo <- genData[genData[, 'stopGain'] == 0 | 1,]
nonhomo <- genData[genData[, 'stopGain'] == 2, ]
t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided")
qqnorm(homo$glucose,main="Normal QQ-plot for homo$glucose")
qqline(homo$glucose,col="red")
qqnorm(nonhomo$glucose,main="Normal QQ-plot for nonhomo$glucose")
qqline(nonhomo$glucose,col="red")
?t.tset()
?t.test()
result_1J <- t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided")
result_1J.p.value
result_1J(p.value)
#1L
sd(homo$glucose)
#1L
sd(nonhomo$glucose)
t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided", conf.level = 0.99)
t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided")
#1L
t_test_knownvar <- function(d1, d2, V1, V2, alpha = 0.05, alt = "2side") {
m1 <- mean(d1); m2 <- mean(d2)
n1 <- length(d1); n2 <- length(d2)
S <- sqrt((V1 / n1) + (V2 / n2))
Z <- (M1 - M2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (M1 - M2 - S * qnorm(1 - alpha / 2))
CL2 <- (M1 - M2 + S * qnorm(1 - alpha / 2))
value <- list(p.value = p, CL1 = CL1, CL2 = CL2)
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, V1 = 1.7, V2 = 1.4)
#1L
t_test_knownvar <- function(d1, d2, V1, V2, alpha = 0.05, alt = "2side") {
m1 <- mean(d1); m2 <- mean(d2)
n1 <- length(d1); n2 <- length(d2)
S <- sqrt((V1 / n1) + (V2 / n2))
Z <- (m1 - m2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (M1 - M2 - S * qnorm(1 - alpha / 2))
CL2 <- (M1 - M2 + S * qnorm(1 - alpha / 2))
value <- list(p.value = p, CL1 = CL1, CL2 = CL2)
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, V1 = 1.7, V2 = 1.4)
#1L
t_test_knownvar <- function(d1, d2, V1, V2, alpha = 0.05, alt = "2side") {
m1 <- mean(d1); m2 <- mean(d2)
n1 <- length(d1); n2 <- length(d2)
S <- sqrt((V1 / n1) + (V2 / n2))
Z <- (m1 - m2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (m1 - m2 - S * qnorm(1 - alpha / 2))
CL2 <- (m1 - m2 + S * qnorm(1 - alpha / 2))
value <- list(p.value = p, CL1 = CL1, CL2 = CL2)
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, V1 = 1.7, V2 = 1.4)
t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided")
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- list(p.value = p, CL1 = CL1, CL2 = CL2)
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, CL1 = CL1, CL2 = CL2)
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
c$p.value
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- as.matrix(c(p.value = p, CL1 = CL1, CL2 = CL2))
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, CL1 = CL1, CL2 = CL2)
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)$p.value
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- as.data.frame(c(p.value = p, CL1 = CL1, CL2 = CL2))
return(value)
}
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, CL1 = CL1, CL2 = CL2)
return(as.data.frame(value))
}
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
str(t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided"))
writeLines('p-value (', res_1J$p.value,') below signiffcance threshold (0.05),
reject the null hypothesis')
res_1J <- str(t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided"))
writeLines('p-value (', res_1J$p.value,') below signiffcance threshold (0.05),
reject the null hypothesis')
res_1J$p.value
res_1J <- str(t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided"))
res_1J <- t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided")
str(res_1J)$p.value
res_1J$p.value
writeLines('p-value (', res_1J$p.value,') below signiffcance threshold (0.05),
reject the null hypothesis')
cat('p-value (', res_1J$p.value,') below signiffcance threshold (0.05),
reject the null hypothesis')
cat('p-value (', res_1J$p.value,') below signiffcance threshold (0.05), reject the null hypothesis')
cat('p-value (', res_1J$p.value,') below signiffcance threshold (0.05), reject the null hypothesis.')
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, CL1 = CL1, CL2 = CL2)
return(as.data.frame(value))
}
rest_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4)
res_1J
(rest_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
(t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
(res_1L <- t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
cat('new p-value (', res_1L$[p.value,], ') below signiffcance threshold (0.05), reject the null hypothesis.')
cat('new p-value (', res_1L[p.value,], ') below signiffcance threshold (0.05), reject the null hypothesis.')
(res_1L <- t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
value <- as.data.frame(c(p.value = p, CL1 = CL1, CL2 = CL2))
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, CL1 = CL1, CL2 = CL2)
return(as.data.frame(value))
}
(res_1L <- t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
cat('new p-value (', res_1L[p.value,], ') below signiffcance threshold (0.05), reject the null hypothesis.')
res_1L[p.value,]
res_1L[,p.value]
(res_1L <- t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
res_1L[,p.value]
res_1L[1,]
cat('new p-value (', res_1L['p.value',], ') below signiffcance threshold (0.05), reject the null hypothesis.')
cat('New p-value (', res_1L['p.value',], ') below signiffcance threshold (0.05), and far small than previous one.')
cat('P-value (', res_1J$p.value,') below signiffcance threshold (0.05), reject the null hypothesis.')
#In order for us to see all the plots you produce, please put this command in the beginning of your file:
par(mfrow = c(3, 2))
# 1A
cat(
"1A. The probability of observing the stop-gain variant at least one time in the 18 sequenced samples is",
1 - dbinom(0, 18 * 2, 0.23), ".\n"
)
#1B
cat("1B. The probability of observing the mutation in at least 2 individuals is",
1 - pbinom(1, 18, 0.23), "\n")
#1C
test_prob_1C <- (1 - pbinom(1, 0:18, 0.23))
count = 0
cat("1C. The minimum number of individuals is",
for (i in test_prob_1C) {
count = count + 1
if (i > 0.9) {
break
}
}
, count, ".\n")
#1D
all_freq <- (14 / (18 * 2))
cat("1D. The estimated allele frequency is", all_freq , ".\n")
binom.test(x = 14,n = 18 * 2, p = all_freq, conf.level = 0.99)
cat("The 99% confidence interval is 0.1927122 0.6149088.","\n")
#1E
P_ill <- 0.1
P_ill_homo <- 0.5
P_homo <- 0.23 * 0.23
P_homo_ill = P_ill_homo * P_homo / P_ill
cat("1E. In Greenlandic Inuit the probability of being homozygous if having type 2
diabetes is", P_homo_ill , ".\n")
#1F
P_non_homo <- 1 - P_homo
P_non_homo_ill <- 1 - P_homo_ill
P_ill_non_homo = P_non_homo_ill * P_ill / P_non_homo
cat("1F. The probability of having type 2 diabetes if not homozygous for the
variant is", P_ill_non_homo , ".\n")
#1G
seeder<-function(name){
n<-sapply(strsplit(name,""),function(x)
sum(match(x,c(LETTERS,letters)),na.rm=T))
set.seed(n)
N<-2700
genotype<-rbinom(N,2,0.23)
glucose <- rnorm(N,5.7,sd=1.4) +
ifelse(genotype==2,rnorm(N,4,sd=1),0)
data.frame(stopGain=genotype,glucose=glucose)
}
genData <- seeder("tls868")
myData <- genData
myData$type[myData$stopGain == 0 | myData$stopGain == 1] <- 'nonhomozygous'
myData$type[myData$stopGain == 2] <- 'homozygous'
boxplot(
glucose ~ type,
data = myData,
main = "1G. Glucose of homozygous and nonhomozygous mutation",
xlab = "Type",
ylab = "Glucose"
)
#1H
type0 <- myData[myData[, 'stopGain'] == 0, ]
type1 <- myData[myData[, 'stopGain'] == 1, ]
type2 <- myData[myData[, 'stopGain'] == 2, ]
calc_CI <- function(data, alpha) {
xbar <- mean(data)
SD <- sd(data)
n <- length(data)
alpha <- alpha
Z <- qt(1 - alpha/2, df = n - 1)
SEM <- SD/sqrt(n)
CI1 <- xbar - Z * SEM
CI2 <- xbar + Z * SEM
return(c(mean = xbar, SEM = SEM, CI1 = CI1, CI2 = CI2))
}
result <- as.matrix(cbind(
calc_CI(type0$glucose, 0.01),
calc_CI(type1$glucose, 0.01),
calc_CI(type2$glucose, 0.01)))
colnames(result) <- c('non-homo, 0','non-homo, 1','homozygous')
writeLines('1H')
(result)
#1I
library(gplots)
ci.l <- result['CI1',]
ci.u <- result['CI2',]
col = c("lightblue", "mistyrose",
"lightcyan")
barplot2(result['mean',], xlab = "Type", ylab = "Mean of glucose levels",
beside = TRUE, col = col,
main = "Mean of glucose levels with 99% confidence", font.main = 4,
plot.ci = TRUE, ci.l = ci.l, ci.u = ci.u,
plot.grid = TRUE)
legend("topleft", legend = colnames(result), fill = col)
#1J
homo <- genData[genData[, 'stopGain'] == 0 | 1,]
nonhomo <- genData[genData[, 'stopGain'] == 2, ]
writeLines('null hypothesis is that
the difference in means is 0 (H_0: mu_1 - mu2 = 0)')
writeLines('alternative hypothesis is that
the difference in means in not 0 (H_1: mu_1 != mu2)')
res_1J <- t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided")
cat('P-value (', res_1J$p.value,') below signiffcance threshold (0.05), reject the null hypothesis.')
res_1J
qqnorm(homo$glucose,main="Normal QQ-plot for homo$glucose")
qqline(homo$glucose,col="red")
qqnorm(nonhomo$glucose,main="Normal QQ-plot for nonhomo$glucose")
qqline(nonhomo$glucose,col="red")
#1L
t_test_knownvar <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, CL1 = CL1, CL2 = CL2)
return(as.data.frame(value))
}
(res_1L <- t_test_knownvar(homo$glucose, nonhomo$glucose, 1.7, 1.4))
cat('New p-value (', res_1L['p.value',], ') below signiffcance threshold (0.05), and far small than previous one.')
#In order for us to see all the plots you produce, please put this command in the beginning of your file:
par(mfrow = c(3, 2))
#1A
cat(
"1A. The probability of observing the stop-gain variant at least one time in the 18 sequenced samples is", 1 - dbinom(0, 18 * 2, 0.23), ".\n"
)
#1B
cat("1B. The probability of observing the mutation in at least 2 individuals is", 1 - pbinom(1, 18, 0.23), "\n")
#1C
test_prob_1C <- (1 - pbinom(1, 0:18, 0.23))
count = 0
cat("1C. The minimum number of individuals is",
for (i in test_prob_1C) {
count = count + 1
if (i > 0.9) {
break
}
}
, count, ".\n")
#1D
all_freq <- (14 / (18 * 2))
cat("1D. The estimated allele frequency is", all_freq , ".\n")
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
# 1B
prob <- 0.23
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
res_1J
str(res_1L)
str(res_1J)
cat('P-value (', res_1J$p.value,') is below signiffcance threshold (0.05), reject the null hypothesis. Test statistic is', res_1J$statistic'.\n')
cat('P-value (', res_1J$p.value,') is below signiffcance threshold (0.05), reject the null hypothesis. Test statistic is', res_1J$statistic,'.\n')
?t.test
t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided", conf.level = 0.99)
t.test(homo$glucose, nonhomo$glucose,var.equal=F)
#1L
t_test_known_var <- function(data1, data2, var1, var2, alpha = 0.05, alt = "2side") {
mean1 <- mean(data1); mean2 <- mean(data2)
N1 <- length(data1); N2 <- length(data2)
S <- sqrt((var1 / N1) + (var2 / N2))
Z <- (mean1 - mean2 - 0) / S
p <- if (alt == "2side") {
2 * pnorm(abs(Z), lower.tail = FALSE)
} else if (alt == "less") {
pnorm(Z, lower.tail = TRUE)
} else { #greater
pnorm(Z, lower.tail = FALSE)
}
CL1 <- (mean1 - mean2 - S * qnorm(1 - alpha / 2))
CL2 <- (mean1 - mean2 + S * qnorm(1 - alpha / 2))
value <- c(p.value = p, Stat = Z, CL1 = CL1, CL2 = CL2)
return(as.data.frame(value))
}
writeLines('1L.')
(res_1L <- t_test_known_var(homo$glucose, nonhomo$glucose, 1.7, 1.4))
writeLines('1L.')
res_1L <- t_test_known_var(homo$glucose, nonhomo$glucose, 1.7, 1.4)
cat('The test statistic is', res_1L['Stat',] ,'New p-value (', res_1L['p.value',], ') below signiffcance threshold (0.05), and far small than previous one. The results still shows that there is a difference between them.')
cat('The test statistic is', res_1L['Stat',] ,'.New p-value (', res_1L['p.value',], ') below signiffcance threshold (0.05), and far small than previous one. The results still shows that there is a difference between them.')
cat('The test statistic is', res_1L['Stat',] ,'. New p-value (', res_1L['p.value',], ') below signiffcance threshold (0.05), and far small than previous one. The results still shows that there is a difference between them.')
writeLines('Alternative hypothesis is that the difference in means in not 0 (H_1: mu_1 != mu2)')
writeLines('Test result:')
(res_1J <- t.test(homo$glucose, nonhomo$glucose, paired = F, alt = "two.sided"))
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
# 1A
# at least one time in the 18 sequenced samples -> 1 - 0 times observation
cat(
"1A. The probability of observing the stop-gain variant at least one time in the 18 sequenced samples is", 1 - dbinom(0, 18 * 2, 0.23), '/n')
# 1A
# at least one time in the 18 sequenced samples -> 1 - 0 times observation
cat(
"1A. The probability of observing the stop-gain variant at least one time in the 18 sequenced samples is", 1 - dbinom(0, 18 * 2, 0.23), "/n")
# 1A
# at least one time in the 18 sequenced samples -> 1 - 0 times observation
cat(
"1A. The probability of observing the stop-gain variant at least one time in the 18 sequenced samples is", 1 - dbinom(0, 18 * 2, 0.23), "\n")
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
source('C:/Users/mao_x/OneDrive/文档/BLOCK 3/stat/hw1/hw1.R')
